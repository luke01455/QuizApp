{"version":3,"sources":["redux/car-quiz/car-quiz.actions.js","data/sports-names.js","components/quiz-modal-sport/quiz-modal-sport.component.jsx"],"names":["addTenCarTickets","type","CarQuizTypes","ADD_TEN_TICKETS","addToCount","ADD_TO_COUNT","sportsNames","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","connect","dispatch","url","URL","useState","question","setQuestion","Math","floor","random","toString","isRadioChecked","setCheckedRadio","correctAnswer","setCorrectAnswer","incorrectAnswer1","setIncorrectAnswer1","incorrectAnswer2","setIncorrectAnswer2","incorrectAnswer3","setIncorrectAnswer3","incorrectAnswer4","setIncorrectAnswer4","answerLocation","setAnswerLocation","questionIsLoading","setQuestionIsLoading","answerIsLoading","setAnswerIsLoading","getParams","randomName","p","getQuestionAndAnswer","newParams","search","URLSearchParams","fetch","method","then","results","json","data","player","randomPerson","length","strThumb","className","src","alt","strPlayer","toUpperCase","error","console","log","getWrongAnswer","randomPerson1","randomPerson2","randomPerson3","randomPerson4","useEffect","value","onChange","checked","onClick"],"mappings":"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","file":"static/js/6.9a68f039.chunk.js","sourcesContent":["import CarQuizTypes from './car-quiz.types';\r\n\r\nexport const addTenCarTickets = () => ({\r\n    type: CarQuizTypes.ADD_TEN_TICKETS\r\n});\r\n\r\nexport const addToCount = () => ({\r\n    type: CarQuizTypes.ADD_TO_COUNT\r\n});","export const sportsNames = { \r\n1: 'Liam',\r\n2: 'Noah', \r\n3: 'William', \r\n4: 'James', \r\n5: 'Oliver', \r\n6: 'Benjamin', \r\n7: 'Elijah', \r\n8: 'Lucas', \r\n9: 'Mason', \r\n10: 'Logan', \r\n11: 'Alexander', \r\n12: 'Ethan', \r\n13: 'Jacob', \r\n14: 'Michael', \r\n15: 'Daniel', \r\n16: 'Henry', \r\n17: 'Jackson', \r\n18: 'Sebastian', \r\n19: 'Aiden', \r\n20: 'Matthew', \r\n21: 'Samuel', \r\n22: 'David', \r\n23: 'Joseph', \r\n24: 'Carter', \r\n25: 'Owen', \r\n26: 'Wyatt', \r\n27: 'John', \r\n28: 'Jack', \r\n29: 'Luke', \r\n30: 'Jayden', \r\n31: 'Dylan', \r\n32: 'Grayson', \r\n33: 'Levi', \r\n34: 'Isaac', \r\n35: 'Gabriel', \r\n36: 'Julian', \r\n37: 'Mateo', \r\n38: 'Anthony', \r\n39: 'Jaxon', \r\n40: 'Lincoln', \r\n41: 'Joshua', \r\n42: 'Christopher', \r\n43: 'Andrew', \r\n44: 'Theodore', \r\n45: 'Caleb', \r\n46: 'Ryan', \r\n47: 'Asher', \r\n48: 'Nathan', \r\n49: 'Thomas', \r\n50: 'Leo', \r\n51: 'Isaiah', \r\n52: 'Charles', \r\n53: 'Josiah', \r\n54: 'Hudson', \r\n55: 'Christian', \r\n56: 'Hunter' ,\r\n57: 'Connor', \r\n58: 'Eli',\r\n59: 'Ezra', \r\n60: 'Aaron', \r\n61: 'Landon', \r\n62: 'Adrian', \r\n63: 'Jonathan', \r\n64: 'Nolan', \r\n65: 'Jeremiah', \r\n66: 'Easton', \r\n67: 'Elias', \r\n68: 'Colton', \r\n69: 'Cameron', \r\n70: 'Carson', \r\n71: 'Robert', \r\n72: 'Angel', \r\n73: 'Maverick', \r\n74: 'Nicholas', \r\n75: 'Dominic', \r\n76: 'Jaxson', \r\n77: 'Greyson', \r\n78: 'Adam', \r\n79: 'Ian', \r\n80: 'Austin', \r\n81: 'Santiago', \r\n82: 'Jordan', \r\n83: 'Cooper', \r\n84: 'Brayden', \r\n85: 'Roman', \r\n86: 'Miles', \r\n87: 'Sawyer', \r\n88: 'Jason',\r\n89: 'Evan', \r\n90: 'Ezekiel', \r\n91: 'Xavier', \r\n92: 'Jose', \r\n93: 'Jace', \r\n94: 'Jameson', \r\n95: 'Leonardo', \r\n96: 'Bryson', \r\n97: 'Axel', \r\n98: 'Everett', \r\n99: 'Parker', \r\n100: 'Kayden'\r\n}","  \r\nimport React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { sportsNames } from '../../data/sports-names';\r\n\r\nimport Spinner from '../spinner/spinner.component';\r\n\r\nimport { addTenCarTickets, addToCount } from '../../redux/car-quiz/car-quiz.actions';\r\n\r\nimport './quiz-modal-sport.styles.scss';\r\n\r\nconst QuizModal = ({ addTenCarTickets, addToCount }) => {\r\n    let count = 1;\r\n    const url = new URL('https://www.thesportsdb.com/api/v1/json/1/searchplayers.php?');\r\n    const [question, setQuestion] = useState([]);\r\n    const [isRadioChecked, setCheckedRadio] = useState(Math.floor(Math.random() * 4 + 1).toString());\r\n    const [correctAnswer, setCorrectAnswer] = useState([]);\r\n    const [incorrectAnswer1, setIncorrectAnswer1] = useState([]);\r\n    const [incorrectAnswer2, setIncorrectAnswer2] = useState([]);\r\n    const [incorrectAnswer3, setIncorrectAnswer3] = useState([]);\r\n    const [incorrectAnswer4, setIncorrectAnswer4] = useState([]);\r\n    const [answerLocation, setAnswerLocation] = useState(1);\r\n    const [questionIsLoading, setQuestionIsLoading] = useState(true);\r\n    const [answerIsLoading, setAnswerIsLoading] = useState(true);\r\n    \r\n\r\n    const getParams = () => {\r\n        // musicians and bands length - find random artist\r\n        let randomName = Math.floor(Math.random() * 69 + 1);\r\n        // search from a randomly generated artist from the musician and bands object\r\n        const params = { p: `${sportsNames[randomName]}`};\r\n        return params\r\n    }\r\n    const getQuestionAndAnswer = () => {\r\n        setAnswerLocation(Math.floor(Math.random() * 4 + 1));\r\n        const newParams = getParams();\r\n        url.search = new URLSearchParams(newParams);\r\n\r\n        try {\r\n            fetch(url, { method: 'POST' })\r\n            .then(results => results.json())\r\n            .then(data => {\r\n            if(data.player){\r\n                // find a random song from the random artist - temporary because i dont want to make too many calls\r\n                let randomPerson = Math.floor(Math.random() * data.player.length + 1);\r\n\r\n                // get a still from the random song of the random artist\r\n                let getQuestion = () => {\r\n                    return ( <div> \r\n                        <img className='question-image' src={data.player[randomPerson].strThumb} alt='questionImg'></img>\r\n                    </div> )\r\n                }\r\n                // get the name of the random song from the random artist aka the correct answer to the question\r\n                let getCorrectAnswer = () => {\r\n                    return (\r\n                        <div>\r\n                            <div className='correct answer'>{data.player[randomPerson].strPlayer.toUpperCase()}</div>\r\n                        </div>\r\n                    )\r\n                }\r\n                if(data.player[randomPerson]) {\r\n                    if (data.player[randomPerson].strThumb) {\r\n                        setQuestion(getQuestion);\r\n                        setCorrectAnswer(getCorrectAnswer);\r\n                        setQuestionIsLoading(false);\r\n                    } else {\r\n                        getQuestionAndAnswer();\r\n                    }\r\n                    \r\n                } else {\r\n                    getQuestionAndAnswer();\r\n                }\r\n            } else {\r\n                getQuestionAndAnswer();\r\n            }\r\n            })\r\n        }\r\n        catch(error) {\r\n            console.log('catch', error)\r\n        }\r\n    };\r\n\r\n    const getWrongAnswer = () => {\r\n        const newParams = getParams();\r\n        url.search = new URLSearchParams(newParams);\r\n\r\n        try {\r\n            fetch(url, { method: 'POST' })\r\n            .then(results => results.json())\r\n            .then(data => {\r\n            if(data.player){\r\n                // find a random song from the random artist - temporarily as i dont want to make too many calls\r\n                let randomPerson1 = Math.floor(Math.random() * data.player.length);\r\n                let randomPerson2 = Math.floor(Math.random() * data.player.length);\r\n                let randomPerson3 = Math.floor(Math.random() * data.player.length);\r\n                let randomPerson4 = Math.floor(Math.random() * data.player.length);\r\n\r\n                // get the name of the random song from the random artist aka the correct answer to the question\r\n                let getIncorrectAnswer1 = () => {\r\n                    return (\r\n                        <div>\r\n                            <div className='incorrect answer'>{data.player[randomPerson1].strPlayer.toUpperCase()}</div>\r\n                        </div>\r\n                    )\r\n                }\r\n                let getIncorrectAnswer2 = () => {\r\n                    return (\r\n                        <div>\r\n                            <div className='incorrect answer'>{data.player[randomPerson2].strPlayer.toUpperCase()}</div>\r\n                        </div>\r\n                    )\r\n                }\r\n                let getIncorrectAnswer3 = () => {\r\n                    return (\r\n                        <div>\r\n                            <div className='incorrect answer'>{data.player[randomPerson3].strPlayer.toUpperCase()}</div>\r\n                        </div>\r\n                    )\r\n                }\r\n                let getIncorrectAnswer4 = () => {\r\n                    return (\r\n                        <div>\r\n                            <div className='incorrect answer'>{data.player[randomPerson4].strPlayer.toUpperCase()}</div>\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n                if(data.player[randomPerson1]) {\r\n                    if (data.player[randomPerson1].strPlayer) {\r\n                        setIncorrectAnswer1(getIncorrectAnswer1);\r\n                        setIncorrectAnswer2(getIncorrectAnswer2);\r\n                        setIncorrectAnswer3(getIncorrectAnswer3);\r\n                        setIncorrectAnswer4(getIncorrectAnswer4);\r\n                        setAnswerIsLoading(false);\r\n                    } else {\r\n                        getWrongAnswer();\r\n                    }\r\n                    \r\n                } else {\r\n                    getWrongAnswer();\r\n                }\r\n            } else {\r\n                getWrongAnswer();\r\n            }\r\n            })\r\n        }\r\n        catch(error) {\r\n            console.log('catch', error)\r\n        }\r\n    }\r\n\r\n    const nextQuestion = () => {\r\n        if(isRadioChecked == answerLocation) {\r\n            console.log('correct', isRadioChecked,  answerLocation, count);\r\n            addToCount();\r\n            addTenCarTickets();\r\n            getQuestionAndAnswer();\r\n            getWrongAnswer();\r\n            \r\n            \r\n        } else {\r\n            console.log('incorrect', isRadioChecked,  answerLocation, count)\r\n            addToCount();\r\n            getQuestionAndAnswer();\r\n            getWrongAnswer();\r\n            \r\n        }\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        getQuestionAndAnswer();\r\n        getWrongAnswer();\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div className='styled-modal'>\r\n            {\r\n                (questionIsLoading && answerIsLoading) ?\r\n                    (\r\n                        <Spinner />\r\n                    ) :\r\n                    (\r\n                        <div className='modal-container'>\r\n                            <div className='question-header'> WHO IS THIS SPORTSPERSON? </div>\r\n                            <div className='modal-warning'> {question}\r\n                            </div>\r\n                            <div className='modal-section-wrapper'>\r\n                                <div className='radio-answer'>\r\n                                    <input type=\"radio\" value=\"1\" onChange={() => setCheckedRadio(\"1\")} checked={isRadioChecked === '1'} />\r\n                                    {answerLocation === 1 ? correctAnswer : incorrectAnswer1}\r\n                                </div>\r\n                                <div className='radio-answer'>\r\n                                    <input type=\"radio\" value=\"2\" onChange={() => setCheckedRadio(\"2\")} checked={isRadioChecked === '2'} />\r\n                                    {answerLocation === 2 ? correctAnswer : incorrectAnswer2}\r\n                                </div>\r\n                                <div className='radio-answer'>\r\n                                    <input type=\"radio\" value=\"3\" onChange={() => setCheckedRadio(\"3\")} checked={isRadioChecked === '3'} />\r\n                                    {answerLocation === 3 ? correctAnswer : incorrectAnswer3}\r\n                                </div>\r\n                                <div className='radio-answer'>\r\n                                    <input type=\"radio\" value=\"4\" onChange={() => setCheckedRadio(\"4\")} checked={isRadioChecked === '4'} />\r\n                                    {answerLocation === 4 ? correctAnswer : incorrectAnswer4}\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div onClick={nextQuestion} className='next-button'> Next Question </div>\r\n                        </div>\r\n                    )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addTenCarTickets: () => dispatch(addTenCarTickets()),\r\n    addToCount: () => dispatch(addToCount())\r\n   });\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(QuizModal);"],"sourceRoot":""}