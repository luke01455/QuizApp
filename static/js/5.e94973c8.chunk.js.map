{"version":3,"sources":["redux/car-quiz/car-quiz.actions.js","data/musicians-bands.js","components/quiz-modal-music/quiz-modal-music.component.jsx"],"names":["addTenCarTickets","type","CarQuizTypes","ADD_TEN_TICKETS","addToCount","ADD_TO_COUNT","musiciansAndBands","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32","33","34","35","36","37","38","39","40","41","42","43","44","45","46","47","48","49","50","51","52","53","54","55","56","57","58","59","60","61","62","63","64","65","66","67","68","69","70","connect","dispatch","url","URL","useState","question","setQuestion","Math","floor","random","toString","isRadioChecked","setCheckedRadio","correctAnswer","setCorrectAnswer","incorrectAnswer1","setIncorrectAnswer1","incorrectAnswer2","setIncorrectAnswer2","incorrectAnswer3","setIncorrectAnswer3","incorrectAnswer4","setIncorrectAnswer4","answerLocation","setAnswerLocation","questionIsLoading","setQuestionIsLoading","answerIsLoading","setAnswerIsLoading","getParams","randomArtist","term","media","getQuestionAndAnswer","newParams","search","URLSearchParams","fetch","method","then","results","json","data","randomTrack","length","artworkUrl100","className","src","alt","trackCensoredName","toUpperCase","error","console","log","getWrongAnswer","randomTrack1","randomTrack2","randomTrack3","randomTrack4","useEffect","value","onChange","checked","onClick"],"mappings":"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","file":"static/js/5.e94973c8.chunk.js","sourcesContent":["import CarQuizTypes from './car-quiz.types';\r\n\r\nexport const addTenCarTickets = () => ({\r\n    type: CarQuizTypes.ADD_TEN_TICKETS\r\n});\r\n\r\nexport const addToCount = () => ({\r\n    type: CarQuizTypes.ADD_TO_COUNT\r\n});","export const musiciansAndBands = {\r\n1: '1 Of The Girls',\r\n2: '112',\r\n3: '2nd Nature',\r\n4: 'Aaliyah',\r\n5: 'Adele',\r\n6: 'After 7',\r\n7: 'Akon',\r\n8: 'Alexis Jordan',\r\n9: 'Allure',\r\n10: 'Aloe Blacc',\r\n11: 'All Saints',\r\n12: 'Amerie',\r\n13: 'Angie Stone',\r\n14: 'Anquette',\r\n15: 'Ashanti',\r\n16: 'Ashford & Simpson',\r\n17: 'Asia Cruise',\r\n18: 'Auburn',\r\n19: 'Avant',\r\n20: 'Ayushita',\r\n21: 'Az Yet',\r\n22: 'Aziatix',\r\n23: 'Alicia Keys',\r\n24: 'Another Bad Creation',\r\n25: 'Ari Lennox',\r\n26: 'Ariana Grande',\r\n27: 'Athena Cage',\r\n28: 'ATL',\r\n29: 'Auburn',\r\n30: 'August Alsina',\r\n31: 'Aundrea Fimbres',\r\n32: 'Alex Clare',\r\n33: 'BeyoncÃ©',\r\n34: 'Blu Cantrell',\r\n35: 'B2K',\r\n36: 'B5',\r\n37: 'Blackstreet',\r\n38: 'Backstreet Boys',\r\n39: 'Boyz II Men',\r\n40: 'Blue Magic',\r\n41: 'Babyface',\r\n42: 'Before Dark',\r\n43: 'Black Buddafly',\r\n44: 'Blaque',\r\n45: 'BoA',\r\n46: 'Brandy',\r\n47: 'Brian Culbertson',\r\n48: 'Bobby Brown',\r\n49: 'Brownstone',\r\n50: 'Brick',\r\n51: 'Bruno Mars',\r\n52: 'Brutha',\r\n53: 'Bryson Tiller',\r\n54: 'Brian McKnight',\r\n55: 'Chris Brown',\r\n56: 'Cameo',\r\n57: 'Clyde Carson',\r\n58: 'Case',\r\n59: 'Cassie',\r\n60: 'Changing Faces',\r\n61: 'Charice',\r\n62: 'Cher Lloyd',\r\n63: 'Cherish',\r\n64: 'Cheri Dennis',\r\n65: 'Cherrelle',\r\n66: 'Cheryl Lynn',\r\n67: 'Chic',\r\n68: 'Christion',\r\n69: 'Ciara',\r\n70: 'Bell Biv DeVoe'\r\n}","import React, { useEffect, useState } from 'react';\r\nimport { connect } from 'react-redux';\r\n\r\nimport { musiciansAndBands } from '../../data/musicians-bands';\r\n\r\nimport Spinner from '../spinner/spinner.component';\r\n\r\nimport { addTenCarTickets, addToCount } from '../../redux/car-quiz/car-quiz.actions';\r\n\r\nimport './quiz-modal-music.styles.scss';\r\n\r\nconst QuizModal = ({ addTenCarTickets, addToCount }) => {\r\n    let count = 1;\r\n    const url = new URL('https://itunes.apple.com/search');\r\n    const [question, setQuestion] = useState([]);\r\n    const [isRadioChecked, setCheckedRadio] = useState(Math.floor(Math.random() * 4 + 1).toString());\r\n    const [correctAnswer, setCorrectAnswer] = useState([]);\r\n    const [incorrectAnswer1, setIncorrectAnswer1] = useState([]);\r\n    const [incorrectAnswer2, setIncorrectAnswer2] = useState([]);\r\n    const [incorrectAnswer3, setIncorrectAnswer3] = useState([]);\r\n    const [incorrectAnswer4, setIncorrectAnswer4] = useState([]);\r\n    const [answerLocation, setAnswerLocation] = useState(1);\r\n    const [questionIsLoading, setQuestionIsLoading] = useState(true);\r\n    const [answerIsLoading, setAnswerIsLoading] = useState(true);\r\n    \r\n\r\n    const getParams = () => {\r\n        // musicians and bands length - find random artist\r\n        let randomArtist = Math.floor(Math.random() * 69 + 1);\r\n        // search from a randomly generated artist from the musician and bands object\r\n        const params = { term: `${musiciansAndBands[randomArtist]}`, media: 'musicVideo'};\r\n        return params\r\n    }\r\n    const getQuestionAndAnswer = () => {\r\n        setAnswerLocation(Math.floor(Math.random() * 4 + 1));\r\n        const newParams = getParams();\r\n        url.search = new URLSearchParams(newParams);\r\n\r\n        try {\r\n            fetch(url, { method: 'POST' })\r\n            .then(results => results.json())\r\n            .then(data => {\r\n                if(data.results) {\r\n                // find a random song from the random artist - temporary because i dont want to make too many calls\r\n                let randomTrack = Math.floor(Math.random() * data.results.length + 1);\r\n\r\n                // get a still from the random song of the random artist\r\n                let getQuestion = () => {\r\n                    return ( <div> \r\n                        <img className='question-image' src={data.results[randomTrack].artworkUrl100} alt='questionImg'></img>\r\n                    </div> )\r\n                }\r\n                // get the name of the random song from the random artist aka the correct answer to the question\r\n                let getCorrectAnswer = () => {\r\n                    return (\r\n                        <div>\r\n                            <div className='correct answer'>{data.results[randomTrack].trackCensoredName.toUpperCase()}</div>\r\n                        </div>\r\n                    )\r\n                }\r\n                if(data.results[randomTrack]) {\r\n                    if (data.results[randomTrack].artworkUrl100) {\r\n                        setQuestion(getQuestion);\r\n                        setCorrectAnswer(getCorrectAnswer);\r\n                        setQuestionIsLoading(false);\r\n                    } else {\r\n                        getQuestionAndAnswer();\r\n                    }\r\n                    \r\n                } else {\r\n                    getQuestionAndAnswer();\r\n                }\r\n            } else {\r\n                getQuestionAndAnswer();\r\n            } \r\n            })\r\n        }\r\n        catch(error) {\r\n            console.log('catch', error)\r\n        }\r\n    };\r\n\r\n    const getWrongAnswer = () => {\r\n        const newParams = getParams();\r\n        url.search = new URLSearchParams(newParams);\r\n\r\n        try {\r\n            fetch(url, { method: 'POST' })\r\n            .then(results => results.json())\r\n            .then(data => {\r\n            if(data.results) {\r\n                // find a random song from the random artist - temporarily as i dont want to make too many calls\r\n                let randomTrack1 = Math.floor(Math.random() * data.results.length);\r\n                let randomTrack2 = Math.floor(Math.random() * data.results.length);\r\n                let randomTrack3 = Math.floor(Math.random() * data.results.length);\r\n                let randomTrack4 = Math.floor(Math.random() * data.results.length);\r\n\r\n                // get the name of the random song from the random artist aka the correct answer to the question\r\n                let getIncorrectAnswer1 = () => {\r\n                    return (\r\n                        <div>\r\n                            <div className='incorrect answer'>{data.results[randomTrack1].trackCensoredName.toUpperCase()}</div>\r\n                        </div>\r\n                    )\r\n                }\r\n                let getIncorrectAnswer2 = () => {\r\n                    return (\r\n                        <div>\r\n                            <div className='incorrect answer'>{data.results[randomTrack2].trackCensoredName.toUpperCase()}</div>\r\n                        </div>\r\n                    )\r\n                }\r\n                let getIncorrectAnswer3 = () => {\r\n                    return (\r\n                        <div>\r\n                            <div className='incorrect answer'>{data.results[randomTrack3].trackCensoredName.toUpperCase()}</div>\r\n                        </div>\r\n                    )\r\n                }\r\n                let getIncorrectAnswer4 = () => {\r\n                    return (\r\n                        <div>\r\n                            <div className='incorrect answer'>{data.results[randomTrack4].trackCensoredName.toUpperCase()}</div>\r\n                        </div>\r\n                    )\r\n                }\r\n\r\n                if(data.results[randomTrack1]) {\r\n                    if (data.results[randomTrack1].artworkUrl100) {\r\n                        setIncorrectAnswer1(getIncorrectAnswer1);\r\n                        setIncorrectAnswer2(getIncorrectAnswer2);\r\n                        setIncorrectAnswer3(getIncorrectAnswer3);\r\n                        setIncorrectAnswer4(getIncorrectAnswer4);\r\n                        setAnswerIsLoading(false);\r\n                    } else {\r\n                        getWrongAnswer();\r\n                    }\r\n                    \r\n                } else {\r\n                    getWrongAnswer();\r\n                }\r\n            } else {\r\n                getWrongAnswer();\r\n            }\r\n                \r\n            })\r\n        }\r\n        catch(error) {\r\n            console.log('catch', error)\r\n        }\r\n    }\r\n\r\n    const nextQuestion = () => {\r\n        if(isRadioChecked == answerLocation) {\r\n            console.log('correct', isRadioChecked,  answerLocation, count);\r\n            addToCount();\r\n            addTenCarTickets();\r\n            getQuestionAndAnswer();\r\n            getWrongAnswer();\r\n            \r\n            \r\n        } else {\r\n            console.log('incorrect', isRadioChecked,  answerLocation, count)\r\n            addToCount();\r\n            getQuestionAndAnswer();\r\n            getWrongAnswer();\r\n            \r\n        }\r\n        \r\n    }\r\n\r\n    useEffect(() => {\r\n        getQuestionAndAnswer();\r\n        getWrongAnswer();\r\n    }, []);\r\n\r\n\r\n    return (\r\n        <div className='styled-modal'>\r\n            {\r\n                (questionIsLoading && answerIsLoading) ?\r\n                    (\r\n                        <Spinner />\r\n                    ) :\r\n                    (\r\n                        <div className='modal-container'>\r\n                            <div className='question-header'> WHAT IS THE NAME OF THIS MUSIC VIDEO </div>\r\n                            <div className='modal-warning'> {question}\r\n                            </div>\r\n                            <div className='modal-section-wrapper'>\r\n                                <div className='radio-answer'>\r\n                                    <input type=\"radio\" value=\"1\" onChange={() => setCheckedRadio(\"1\")} checked={isRadioChecked === '1'} />\r\n                                    {answerLocation === 1 ? correctAnswer : incorrectAnswer1}\r\n                                </div>\r\n                                <div className='radio-answer'>\r\n                                    <input type=\"radio\" value=\"2\" onChange={() => setCheckedRadio(\"2\")} checked={isRadioChecked === '2'} />\r\n                                    {answerLocation === 2 ? correctAnswer : incorrectAnswer2}\r\n                                </div>\r\n                                <div className='radio-answer'>\r\n                                    <input type=\"radio\" value=\"3\" onChange={() => setCheckedRadio(\"3\")} checked={isRadioChecked === '3'} />\r\n                                    {answerLocation === 3 ? correctAnswer : incorrectAnswer3}\r\n                                </div>\r\n                                <div className='radio-answer'>\r\n                                    <input type=\"radio\" value=\"4\" onChange={() => setCheckedRadio(\"4\")} checked={isRadioChecked === '4'} />\r\n                                    {answerLocation === 4 ? correctAnswer : incorrectAnswer4}\r\n                                </div>\r\n\r\n                            </div>\r\n                            <div onClick={nextQuestion} className='next-button'> Next Question </div>\r\n                        </div>\r\n                    )\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n    addTenCarTickets: () => dispatch(addTenCarTickets()),\r\n    addToCount: () => dispatch(addToCount())\r\n   });\r\n\r\n\r\nexport default connect(null, mapDispatchToProps)(QuizModal);"],"sourceRoot":""}